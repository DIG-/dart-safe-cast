name: Dart CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk:
          - '3.0.0'
          - '3.1.0'
          - '3.2.0'
          - '3.3.0'
          - '3.4.0'
          - 'latest'
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .
        if: always() && steps.install.outcome == 'success'
      - name: Analyze code
        run: dart analyze --fatal-infos
        if: always() && steps.install.outcome == 'success'
  test:
    needs: analyze
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk:
          - '3.0.0'
          - '3.1.0'
          - '3.2.0'
          - '3.3.0'
          - '3.4.0'
          - 'latest'
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
        with:
          sdk: ${{ matrix.sdk }}
      - id: install
        name: Install dependencies
        run: dart pub get
      - name: Run tests
        run: dart test --test-randomize-ordering-seed=random
        if: always() && steps.install.outcome == 'success'
  
